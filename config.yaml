apiVersion: k3d.io/v1alpha4
kind: Simple
metadata:
  name: k3s
servers: 1
volumes:
  - volume: C:/data/k8s:/tmp/shared
    nodeFilters:
      - server:0
      - agent:*
ports:
  - port: 8080:80
    nodeFilters:
      - loadbalancer
  - port: 8443:443
    nodeFilters:
      - loadbalancer
  - port: 3333:3307
    nodeFilters:
      - loadbalancer
  - port: 4222:4222
    nodeFilters:
      - loadbalancer
  - port: 8222:8222
    nodeFilters:
      - loadbalancer
  - port: 6379:6379
    nodeFilters:
      - loadbalancer
  - port: 9092:9092
    nodeFilters:
      - loadbalancer
  - port: 9093:9093
    nodeFilters:
      - loadbalancer
  - port: 9094:9094
    nodeFilters:
      - loadbalancer
  - port: 9095:9095
    nodeFilters:
      - loadbalancer
registries:
  create:
    name: registry
    host: "0.0.0.0"
    hostPort: "5000"
    volumes:
      - C:/data/registry:/var/lib/registry # persist registry data locally
  config: | # define contents of the `registries.yaml` file (or reference a file); same as `--registry-config /path/to/config.yaml`
    mirrors:
      "registry.ubk3s":
        endpoint:
          - http://registry.ubk3s:5000
options:
  k3d:
    wait: true
    timeout: "60s"
  #k3s:
  #  extraArgs:
  #    - arg: --tls-san=192.168.1.254
  #      nodeFilters:
  #        - server:*
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true
